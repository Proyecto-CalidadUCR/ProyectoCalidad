<!--Actividad supervisada
    - Historia de usuario: ROD-1-6 ,  ROD-1-6.1
    - Revisar si un item tiene fotos almacenadas en la base de datos, sino tiene mostrar el placeholder, si tiene fotos mostrarlas y hacer que sean seleccionables por si se desea eliminar alguna.
    - Si fuera necesario ordenar la vista de editar si se desordena por las fotos
    -->

@model Proyecto_TruequesUCR.Models.Item

@{
    ViewBag.Title = "Edit";
}

<head>
    <meta charset="utf-8">
    <title>Trueques &#64 UCR</title>
    <link rel="icon" type="image/x-icon" href="favicon.ico">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/Content/bootstrap.css">
    <link rel="stylesheet" href="~/Content/General.css">
    <link rel="stylesheet" href="~/Content/Roditas.css">
    <link rel="stylesheet" type="text/css" href="~/Content/Index.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script type="text/javascript" src="~/Scripts/AgregarItem.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
    <link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css" rel="Stylesheet" type="text/css" />
</head>


<div class="containerNavBarGeneral">
    <ul class="navBarGeneral">
        <li class="navBarGeneralLink"><a href="/Home/Index">Inicio</a></li>
        <li class="navBarGeneralLink"><a href="/Home/About">Acerca de</a></li>
        <li class="navBarGeneralLink"><a href="/Home/Contact">Contacto</a></li>
    </ul>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id_Item)

    @Html.HiddenFor(model => model.Email_Comerciante)
    @Html.HiddenFor(model => model.Fecha)

<div class="border container form-horizontal w-50 m-auto" style="padding-top: 10px; background-color: #dee2e6;">
    <h2 class="text-center">Editar Ítem</h2>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-row">
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => Model.Titulo, "Título", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control titulo", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger", @style = "color:#b94a48" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Descripcion, "Descripción", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-sm-7">
                    @Html.TextAreaFor(model => model.Descripcion, 5, 30, new { htmlAttributes = new { @class = "form-control" }, @class = "descripcion", required = "required" })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group containerImagen col-sm-6">
            <div class="text-center" style="height:200px; margin-bottom: 10px;">
                <div class="form-group">
                    <div class="col-md-10">
                        @{
                            if (Model.Fotos != null)
                            {
                                if (Model.Fotos.Count > 1)
                                {
                                    String carrusel = "carruselImagenes";
                                    int index = 0;
                                    <div id="containerCarrusel">
                                        <div id="@carrusel" class="carousel slide border">
                                            <div id="inner" class="carousel-inner" role="listbox">
                                                <ol id="ol" class="carousel-indicators indicadoresCarrusel" style=" margin-bottom:5px; height:10px;">
                                                    @foreach (var foto in Model.Fotos)
                                                    {
                                                        String slideClass = "active";
                                                        String slide = "" + index;
                                                        if (index != 0)
                                                        {
                                                            slideClass = "";
                                                        }
                                                        ++index;
                                                        string ids = "ol" + (index - 1);
                                                        <li id=@ids data-target="#@carrusel" data-slide-to="@slide" class="@slideClass" style="border-radius: 50%; background-color: #6dc067; width:10px; height:10px;"></li>
                                                    }
                                                </ol>
                                                @{
                                                    index = 0;
                                                    foreach (var foto in Model.Fotos)
                                                    {
                                                        String img64 = Convert.ToBase64String(foto.Foto);
                                                        String img64Url = string.Format("data:image/" + "jepg" + ";base64,{0}", img64);
                                                        String clase;
                                                        if (index == 0)
                                                        {
                                                            clase = "carousel-item active";
                                                        }
                                                        else
                                                        {
                                                            clase = "carousel-item";
                                                        }
                                                        string idImg = "img" + index;
                                                        <div id=@idImg class="@clase">
                                                            <img src="@img64Url" width="150" height="150" />
                                                        </div>
                                                        ++index;
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    if (Model.Fotos.Count == 1)
                                    {
                                        foreach (var foto in Model.Fotos)
                                        {
                                            String img64 = Convert.ToBase64String(foto.Foto);
                                            String img64Url = string.Format("data:image/" + "jepg" + ";base64,{0}", img64);
                                            <img src="@img64Url" class="img-fluid" style="display: block; margin-left: auto; margin-right: auto; width: 150px; height: 150px;" />
                                        }
                                    }
                                    else
                                    {
                                        <img src="~/Content/Images/fotoPredeterminada.png" style="display: block; margin-left: auto; margin-right: auto; width: 50%;" />
                                    }
                                }
                                <button class="btn btn-default" type="button" style="color:#6dc067" value="delete" id="@Model.Id_Item" onclick='Delete(@Model.Id_Item,"@Model.Email_Comerciante")'>Administrar Fotos</button>
                                //@Html.ActionLink("Administrar Fotos", "AdminFotos", new { id = @ViewData["id"], email = @ViewData["email"] }, htmlAttributes: new { @style = "color:#005da4" })
                            }
                        }
                    </div>
                    <div class="text-center form-group col-md-10" style="margin-top: 20px;">
                        @{ 
                            var displayAgregar = "inline";
                            var displayEliminar = "none";
                            var contenidoLabel = "No hay ningún archivo adjunto";
                            if (ViewBag.Archivo != null)
                            {
                                if (ViewBag.Archivo.Count > 0)
                                {
                                    foreach(var arc in ViewBag.Archivos)
                                    {
                                        displayAgregar = "none";
                                        displayEliminar = "inline";
                                        contenidoLabel = arc.Nombre;
                                    }
                                }

                            }
                        }
                        <label id="labelArchivo">@contenidoLabel</label><label id="cancelar" class="labelFoto" onclick="deleteFile()" style="color:#6dc067; margin-left: 10px; display: @displayEliminar;">X</label><br />
                        <input class="inputFoto" type="file" id="archivo" name="archivo" onchange="showFile(event)" accept="application/pdf" style="margin: 0;" />
                        <label id="adjuntarArchivo" class="labelFoto" style="color:#6dc067; margin: 0; display: @displayAgregar" for="archivo">Adjuntar archivo</label>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-row">
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => Model.etiquetas_final, "Etiquetas", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.etiquetas_final, new { htmlAttributes = new { @class = "form-control titulo" } })
                    @Html.ValidationMessageFor(model => model.etiquetas_final, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Tipo_Visibilidad, "Visibilidad", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-sm-7">
                    @Html.DropDownList("Tipo_Visibilidad", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Tipo_Visibilidad, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Nombre_Estado_Item, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-sm-7">
                    @Html.DropDownList("Nombre_Estado_Item", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Nombre_Estado_Item, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div>
            <input type="hidden" id="hfCustomer" />
        </div>
        <script>
            var $x = jQuery.noConflict();
            $x(function () {
                $x("#etiquetas_final").autocomplete({
                    source: function (request, response) {
                        $x.ajax({
                            url: "/Items/Autocomplete",
                            data: "{ 'search': '" + request.term + "'}",
                            dataType: "json",
                            type: "POST",
                            contentType: "application/json; charset=utf-8",
                            success: function (data) {
                                var texto = String(request.term).split(" ");
                                var textoSinUltimo = "";
                                for (var i = 0; i < texto.length - 1; i++) {
                                    textoSinUltimo += texto[i] + " ";
                                }
                                response($.map(data, function (item) {
                                    return textoSinUltimo + item.val;
                                }))
                            },
                            error: function (response) {
                                alert(response.responseText);
                            },
                            failure: function (response) {
                                alert(response.responseText);
                            }
                        });
                    },
                    select: function (i) {
                        $x("hfCustomer").val(i.val);
                    },
                    minLength: 1
                });
            });
        </script>
        <!--
        Actividad supervisada 2:
        Estudiantes: Pablo César Ruiz Vásquez, Steven Barahona, Francisco Durán
        Carné: B56406, B70893, B72639
        Funcionalidad a implementar: Agregar el árbol de categorías a la vista de crear y editar
        -->
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Nombre_Categoria_Item, "Categoría", htmlAttributes: new { @class = "control-label col-md-2" })
                <ul>

                    @foreach (var cat in ViewBag.Nombre_Categoria_Item)
                    {

                        var idLista = "lista" + cat.Nombre_Categoria;
                        var onClick = "sacarHijos(\'" + "null\'" + ",\'" + cat.Nombre_Categoria + "\')";
                        <li>
                            <input id="@cat.Nombre_Categoria" name="Nombre_Categoria_Item[]" value="@cat.Nombre_Categoria" type="checkbox" onclick="@onClick" />
                            <label for="@cat.Nombre_Categoria">@cat.Nombre_Categoria</label>
                            <ul id="@idLista"></ul>
                        </li>
                    }
                </ul>
                <input id="Previa" name="Nombre_Categoria_Item[]" value="@ViewBag.Previa" type="checkbox" checked hidden/>
            </div>
        </div>

    </div>
    <div class="form-row">
        <div class=" col-sm-6">
            <div class="button botonesAgregarCancelar col-sm-7">
                <button type="submit" class="btn btn-success btn-agregar">Agregar</button>
                @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-outline-success" })
            </div>
        </div>
    </div>

    <div style="clear: both"></div>
</div>
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>

                    </button>

                </div>
                <div class="modal-body container-fluid">
                    ...
                </div>

            </div>

        </div>

    </div>
}

@section Scripts {
    <script>
        function Delete(id, email) {

            $.get("@Url.Action("AdminFotos","items")/" + id + "?email=" + email,
                function (data) { $('.modal-body').html(data); })
            $('#myModal').modal('show');
        }

        $('#myModal').on('hidden.bs.modal', function (e) {
            $('.modal-body').html("");
        })
    </script>
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/CategoriasHijo.js")
}
